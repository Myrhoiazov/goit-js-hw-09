{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA6BA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,MAEpBA,MArCMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAwBC,GACtBA,EAAGC,iBAEH,IAAMC,OAAQC,EAAUC,KAAMC,EAAQhB,MAAOiB,GAAYN,EAAGO,OAAOC,SAEnE,MAAMC,EAAQC,OAAOJ,EAAQK,OACvBP,EAAOM,OAAOL,EAAOM,OACrBT,EAASQ,OAAOP,EAASQ,OAE/B,IAAIC,EAAQH,EAEZ,IAAK,IAAII,EAAI,EAAGA,GAAKX,EAAQW,GAAK,EAChC1B,EAAc0B,EAAGD,GACdE,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,MACjB0B,EAAA9B,GAAS+B,OAAOC,QAAQ,uBAAqB7B,QAAiBC,UAE/D6B,OAAM,EAAC9B,SAAEA,EAAQC,MAAEA,MAClB0B,EAAA9B,GAAS+B,OAAOG,QAAQ,sBAAoB/B,QAAeC,UAE/DuB,GAASR","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', createPromises);\n\nfunction createPromises(ev) {\n  ev.preventDefault();\n\n  let { amount: amountEl, step: stepEl, delay: delayEl } = ev.target.elements;\n\n  const delay = Number(delayEl.value);\n  const step = Number(stepEl.value);\n  const amount = Number(amountEl.value);\n\n  let count = delay;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, count)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    count += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","ev","preventDefault","amount","amountEl","step","stepEl","delayEl","target","elements","delay1","Number","value","count","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.391686fb.js.map"}