{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA6BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,YAEpBA,MArCMQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAwBC,GACtBA,EAAGC,iBAUH,IARA,IAAyDC,EAAAF,EAAGG,OAAOC,SAA7DC,EAAmDH,EAAnDI,OAAkBC,EAAiCL,EAAjCM,KAAcC,EAAmBP,EAAnBb,MAEhCqB,EAAQC,OAAOF,EAAQG,OACvBJ,EAAOG,OAAOJ,EAAOK,OACrBN,EAASK,OAAON,EAASO,OAE3BC,EAAQH,EAEHI,EAAI,EAAGA,GAAKR,EAAQQ,GAAK,EAChC3B,EAAc2B,EAAGD,GACdE,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACjB4B,EAAAhC,GAASiC,OAAOC,QAAQ,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,UAEvEgC,OAAM,SAAAL,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClB4B,EAAAhC,GAASiC,OAAOI,QAAQ,sBAAqCF,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,UAEvEwB,GAASL,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', createPromises);\n\nfunction createPromises(ev) {\n  ev.preventDefault();\n\n  let { amount: amountEl, step: stepEl, delay: delayEl } = ev.target.elements;\n\n  const delay = Number(delayEl.value);\n  const step = Number(stepEl.value);\n  const amount = Number(amountEl.value);\n\n  let count = delay;\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, count)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    count += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","ev","preventDefault","_elements","target","elements","amountEl","amount","stepEl","step","delayEl","delay1","Number","value","count","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.539c5118.js.map"}